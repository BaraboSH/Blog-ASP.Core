{"ast":null,"code":"import createSagaMiddleWare from 'redux-saga';\nimport { unauthorizeUser } from './actions/auth';\nexport var sagaMiddleware = createSagaMiddleWare();\n\nvar localStorageMiddleware = function localStorageMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      if (action.type === unauthorizeUser.getType()) {\n        localStorage.clear();\n      }\n\n      var prevState = store.getState();\n      var result = next(action);\n      var nextState = store.getState();\n\n      if (prevState.auth.token !== nextState.auth.token && nextState.auth.token) {\n        localStorage.setItem('token', nextState.auth.token);\n        localStorage.setItem('tokenExpirationTime', nextState.auth.tokenExpirationTime);\n        localStorage.setItem('id', nextState.auth.id);\n        localStorage.setItem('email', nextState.auth.email);\n      }\n\n      return result;\n    };\n  };\n};\n\nexport default [sagaMiddleware, localStorageMiddleware];","map":{"version":3,"sources":["C:\\Users\\Nikita\\Desktop\\Blog ASP.Core\\front-end\\src\\middleware.js"],"names":["createSagaMiddleWare","unauthorizeUser","sagaMiddleware","localStorageMiddleware","store","next","action","type","getType","localStorage","clear","prevState","getState","result","nextState","auth","token","setItem","tokenExpirationTime","id","email"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,YAAjC;AAEA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,OAAO,IAAMC,cAAc,GAAGF,oBAAoB,EAA3C;;AAEP,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACtD,UAAGA,MAAM,CAACC,IAAP,KAAgBN,eAAe,CAACO,OAAhB,EAAnB,EAA6C;AACzCC,QAAAA,YAAY,CAACC,KAAb;AACH;;AAED,UAAMC,SAAS,GAAGP,KAAK,CAACQ,QAAN,EAAlB;AACA,UAAMC,MAAM,GAAGR,IAAI,CAACC,MAAD,CAAnB;AACA,UAAMQ,SAAS,GAAGV,KAAK,CAACQ,QAAN,EAAlB;;AAEA,UAAGD,SAAS,CAACI,IAAV,CAAeC,KAAf,KAAyBF,SAAS,CAACC,IAAV,CAAeC,KAAxC,IAAiDF,SAAS,CAACC,IAAV,CAAeC,KAAnE,EAA0E;AACtEP,QAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BH,SAAS,CAACC,IAAV,CAAeC,KAA7C;AACAP,QAAAA,YAAY,CAACQ,OAAb,CACI,qBADJ,EAEIH,SAAS,CAACC,IAAV,CAAeG,mBAFnB;AAIAT,QAAAA,YAAY,CAACQ,OAAb,CAAqB,IAArB,EAA2BH,SAAS,CAACC,IAAV,CAAeI,EAA1C;AACAV,QAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BH,SAAS,CAACC,IAAV,CAAeK,KAA7C;AACH;;AACD,aAAOP,MAAP;AACH,KAnB2C;AAAA,GAAR;AAAA,CAApC;;AAqBA,eAAe,CAACX,cAAD,EAAiBC,sBAAjB,CAAf","sourcesContent":["import createSagaMiddleWare from 'redux-saga'\r\n\r\nimport { unauthorizeUser } from './actions/auth'\r\n\r\nexport const sagaMiddleware = createSagaMiddleWare()\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n    if(action.type === unauthorizeUser.getType()){\r\n        localStorage.clear()\r\n    }\r\n\r\n    const prevState = store.getState()\r\n    const result = next(action)\r\n    const nextState = store.getState()\r\n\r\n    if(prevState.auth.token !== nextState.auth.token && nextState.auth.token) {\r\n        localStorage.setItem('token', nextState.auth.token)\r\n        localStorage.setItem(\r\n            'tokenExpirationTime',\r\n            nextState.auth.tokenExpirationTime\r\n        )\r\n        localStorage.setItem('id', nextState.auth.id)\r\n        localStorage.setItem('email', nextState.auth.email)    \r\n    }\r\n    return result\r\n}\r\n\r\nexport default [sagaMiddleware, localStorageMiddleware]\r\n\r\n"]},"metadata":{},"sourceType":"module"}