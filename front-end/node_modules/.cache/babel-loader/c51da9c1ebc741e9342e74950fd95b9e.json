{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Nikita\\\\Desktop\\\\Blog ASP.Core\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Nikita\\\\Desktop\\\\Blog ASP.Core\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\nvar RequestError = function RequestError(status, message) {\n  _classCallCheck(this, RequestError);\n\n  this.status = status;\n  this.message = message;\n};\n\nexport var headers = function headers() {\n  return {\n    'Content-Type': 'application/json',\n    Authorization: \"Bearer \".concat(localStorage.getItem('token'))\n  };\n};\nexport var makePostOptions = function makePostOptions(data) {\n  return {\n    method: 'POST',\n    mode: 'cors',\n    headers: headers(),\n    body: JSON.stringify(data)\n  };\n};\nexport var makePatchOptions = function makePatchOptions(data) {\n  return _objectSpread({}, makePostOptions(data), {\n    method: 'PATCH'\n  });\n};\nexport var getOptions = function getOptions() {\n  return {\n    method: 'GET',\n    headers: headers()\n  };\n};\nexport var deleteOptions = function deleteOptions() {\n  return {\n    method: 'DELETE',\n    mode: 'cors',\n    headers: headers()\n  };\n};\n\nvar request = function request(url, options) {\n  return fetch(url, options).then(function (response) {\n    var status = response.status;\n    if (status === 204) return {};\n    var json = response.json();\n    if (status >= 200 && status < 400) return json;\n    return json.then(function (message) {\n      throw new RequestError(status, message);\n    });\n  });\n};\n\nexport var plainGet = function plainGet(url) {\n  return request(url, {\n    method: 'GET',\n    header: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport var plainPost = function plainPost(url, data) {\n  return request(url, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n};\nexport var get = function get(url) {\n  return request(url, getOptions());\n};\nexport var post = function post(url, data) {\n  return request(url, makePostOptions(data));\n};\nexport var del = function del(url, id) {\n  return request(url + id, deleteOptions());\n};","map":{"version":3,"sources":["C:\\Users\\Nikita\\Desktop\\Blog ASP.Core\\front-end\\src\\utils\\api.js"],"names":["RequestError","status","message","headers","Authorization","localStorage","getItem","makePostOptions","data","method","mode","body","JSON","stringify","makePatchOptions","getOptions","deleteOptions","request","url","options","fetch","then","response","json","plainGet","header","plainPost","get","post","del","id"],"mappings":"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","sourcesContent":["class RequestError {\r\n    constructor(status, message) {\r\n      this.status = status\r\n      this.message = message\r\n    }\r\n  }\r\n  \r\n  export const headers = () => ({\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${localStorage.getItem('token')}`\r\n  })\r\n  \r\n  export const makePostOptions = data => ({\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: headers(),\r\n    body: JSON.stringify(data)\r\n  })\r\n  \r\n  export const makePatchOptions = data => ({\r\n    ...makePostOptions(data),\r\n    method: 'PATCH'\r\n  })\r\n  \r\n  export const getOptions = () => ({\r\n    method: 'GET',\r\n    headers: headers()\r\n  })\r\n  \r\n  export const deleteOptions = () => ({\r\n    method: 'DELETE',\r\n    mode: 'cors',\r\n    headers: headers()\r\n  })\r\n  \r\n  const request = (url, options) =>\r\n    fetch(url, options).then(response => {\r\n      const { status } = response\r\n  \r\n      if (status === 204) return {}\r\n      const json = response.json()\r\n      if (status >= 200 && status < 400) return json\r\n      return json.then(message => {\r\n        throw new RequestError(status, message)\r\n      })\r\n    })\r\n  \r\n  export const plainGet = url =>\r\n    request(url, {\r\n      method: 'GET',\r\n      header: { 'Content-Type': 'application/json' }\r\n    })\r\n  export const plainPost = (url, data) =>\r\n    request(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n  export const get = url => request(url, getOptions())\r\n  export const post = (url, data) => request(url, makePostOptions(data))\r\n  export const del = (url, id) => request(url + id, deleteOptions())"]},"metadata":{},"sourceType":"module"}