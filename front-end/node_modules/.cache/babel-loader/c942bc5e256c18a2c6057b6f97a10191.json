{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Nikita\\\\Desktop\\\\Blog ASP.Core\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Nikita\\\\Desktop\\\\Blog ASP.Core\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(saga);\n\nimport { takeLatest } from 'redux-saga/effects';\nimport * as genericActions from '../actions/generic';\nimport * as genericSagas from './generic';\nimport * as authActions from '../actions/auth';\nimport * as authSagas from './auth';\nexport default function saga() {\n  var relations, _i, _ref3, _ref2, actions, sagas, _arr, _i2, _ref6, _ref5, actionName, action, _saga;\n\n  return _regeneratorRuntime.wrap(function saga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          relations = [[genericActions, genericSagas], [authActions, authSagas]];\n          _i = 0;\n\n        case 2:\n          if (!(_i < relations.length)) {\n            _context.next = 24;\n            break;\n          }\n\n          _ref3 = relations[_i];\n          _ref2 = _slicedToArray(_ref3, 2);\n          actions = _ref2[0];\n          sagas = _ref2[1];\n          _arr = Object.entries(actions);\n          _i2 = 0;\n\n        case 9:\n          if (!(_i2 < _arr.length)) {\n            _context.next = 21;\n            break;\n          }\n\n          _ref6 = _arr[_i2];\n          _ref5 = _slicedToArray(_ref6, 2);\n          actionName = _ref5[0];\n          action = _ref5[1];\n          _saga = sagas[actionName];\n\n          if (!_saga) {\n            _context.next = 18;\n            break;\n          }\n\n          _context.next = 18;\n          return takeLatest(action.getType(), _saga);\n\n        case 18:\n          _i2++;\n          _context.next = 9;\n          break;\n\n        case 21:\n          _i++;\n          _context.next = 2;\n          break;\n\n        case 24:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:\\Users\\Nikita\\Desktop\\Blog ASP.Core\\front-end\\src\\sagas\\index.js"],"names":["saga","takeLatest","genericActions","genericSagas","authActions","authSagas","relations","actions","sagas","Object","entries","actionName","action","getType"],"mappings":";;;;;yBAQyBA,I;;AARzB,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAO,KAAKC,cAAZ,MAAgC,oBAAhC;AACA,OAAO,KAAKC,YAAZ,MAA8B,WAA9B;AAEA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AAEA,eAAe,SAAUL,IAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPM,UAAAA,SADO,GACK,CAChB,CAACJ,cAAD,EAAiBC,YAAjB,CADgB,EAEhB,CAACC,WAAD,EAAcC,SAAd,CAFgB,CADL;AAAA;;AAAA;AAAA,qBAMkBC,SANlB;AAAA;AAAA;AAAA;;AAAA,kBAMkBA,SANlB;AAAA;AAMDC,UAAAA,OANC;AAMQC,UAAAA,KANR;AAAA,iBAOwBC,MAAM,CAACC,OAAP,CAAeH,OAAf,CAPxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAOCI,UAAAA,UAPD;AAOaC,UAAAA,MAPb;AAQHZ,UAAAA,KARG,GAQIQ,KAAK,CAACG,UAAD,CART;;AAAA,eASLX,KATK;AAAA;AAAA;AAAA;;AAAA;AASC,iBAAMC,UAAU,CAACW,MAAM,CAACC,OAAP,EAAD,EAAmBb,KAAnB,CAAhB;;AATD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeLatest } from 'redux-saga/effects'\r\n\r\nimport * as genericActions from '../actions/generic'\r\nimport * as genericSagas from './generic'\r\n\r\nimport * as authActions from '../actions/auth'\r\nimport * as authSagas from './auth'\r\n\r\nexport default function* saga() {\r\n  const relations = [\r\n    [genericActions, genericSagas],\r\n    [authActions, authSagas],\r\n  ]\r\n\r\n  for (const [actions, sagas] of relations) {\r\n    for (const [actionName, action] of Object.entries(actions)) {\r\n      const saga = sagas[actionName]\r\n      if (saga) yield takeLatest(action.getType(), saga)\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}