{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\Desktop\\\\Blog ASP.Core\\\\front-end\\\\src\\\\components\\\\auth\\\\register.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { submitRegister } from '../../actions/auth';\nimport { to } from '../../actions/navigation';\nimport { required, email, minLength6, lengthLessThan40, minLenght4 } from '../../validators/forms';\nimport { connectTo } from '../../utils/generic';\nimport { isValid } from '../../utils/forms';\nimport TextField from './text-field';\nimport AuthForm from './auth-form';\nexport default connectTo(function (state) {\n  return {\n    enabledSubmit: isValid(state, 'register')\n  };\n}, {\n  to: to,\n  submitRegister: submitRegister\n}, reduxForm({\n  form: 'register'\n})(function (_ref) {\n  var handleSubmit = _ref.handleSubmit,\n      enabledSubmit = _ref.enabledSubmit,\n      submitRegister = _ref.submitRegister,\n      to = _ref.to;\n  var fields = [React.createElement(Field, {\n    name: \"email\",\n    key: \"email\",\n    component: TextField,\n    label: \"Email\",\n    type: \"text\",\n    validate: [required, email],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"username\",\n    key: \"username\",\n    component: TextField,\n    label: \"Username\",\n    type: \"text\",\n    validate: [required, minLenght4],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    key: \"password\",\n    component: TextField,\n    label: \"Password\",\n    type: \"password\",\n    validate: [required, minLength6, lengthLessThan40],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })];\n  return React.createElement(AuthForm, {\n    fields: fields,\n    handleSubmit: handleSubmit,\n    enabledSubmit: enabledSubmit,\n    onSubmit: submitRegister,\n    submitText: \"Register\",\n    onBottomTextClick: function onBottomTextClick() {\n      return to('login');\n    },\n    bottomText: \"Already have an account? Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n}));","map":{"version":3,"sources":["C:\\Users\\Nikita\\Desktop\\Blog ASP.Core\\front-end\\src\\components\\auth\\register.js"],"names":["React","Field","reduxForm","submitRegister","to","required","email","minLength6","lengthLessThan40","minLenght4","connectTo","isValid","TextField","AuthForm","state","enabledSubmit","form","handleSubmit","fields"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,EAAT,QAAmB,0BAAnB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,UAA1B,EAAsCC,gBAAtC,EAAwDC,UAAxD,QAA0E,wBAA1E;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,OAAT,QAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,eAAeH,SAAS,CACtB,UAAAI,KAAK;AAAA,SAAK;AACRC,IAAAA,aAAa,EAAEJ,OAAO,CAACG,KAAD,EAAQ,UAAR;AADd,GAAL;AAAA,CADiB,EAItB;AAAEV,EAAAA,EAAE,EAAFA,EAAF;AAAMD,EAAAA,cAAc,EAAdA;AAAN,CAJsB,EAKtBD,SAAS,CAAC;AAAEc,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAT,CACE,gBAKM;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJF,aAGI,QAHJA,aAGI;AAAA,MAFJZ,cAEI,QAFJA,cAEI;AAAA,MADJC,EACI,QADJA,EACI;AACJ,MAAMc,MAAM,GAAG,CACb,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAC,OAFN;AAGE,IAAA,SAAS,EAAEN,SAHb;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,QAAQ,EAAE,CAACP,QAAD,EAAWC,KAAX,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,EASb,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAC,UAFN;AAGE,IAAA,SAAS,EAAEM,SAHb;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,QAAQ,EAAE,CAACP,QAAD,EAAWI,UAAX,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATa,EAiBb,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAC,UAFN;AAGE,IAAA,SAAS,EAAEG,SAHb;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,QAAQ,EAAE,CAACP,QAAD,EAAWE,UAAX,EAAuBC,gBAAvB,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBa,CAAf;AA0BA,SACE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAEU,MADV;AAEE,IAAA,YAAY,EAAED,YAFhB;AAGE,IAAA,aAAa,EAAEF,aAHjB;AAIE,IAAA,QAAQ,EAAEZ,cAJZ;AAKE,IAAA,UAAU,EAAC,UALb;AAME,IAAA,iBAAiB,EAAE;AAAA,aAAMC,EAAE,CAAC,OAAD,CAAR;AAAA,KANrB;AAOE,IAAA,UAAU,EAAC,gCAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CA5CH,CALsB,CAAxB","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nimport { submitRegister } from '../../actions/auth'\r\nimport { to } from '../../actions/navigation'\r\nimport { required, email, minLength6, lengthLessThan40, minLenght4 } from '../../validators/forms';\r\nimport { connectTo } from '../../utils/generic';\r\nimport { isValid} from '../../utils/forms'\r\nimport TextField from './text-field'\r\nimport AuthForm from './auth-form'\r\n\r\nexport default connectTo(\r\n  state => ({\r\n    enabledSubmit: isValid(state, 'register')\r\n  }),\r\n  { to, submitRegister },\r\n  reduxForm({ form: 'register' })(\r\n    ({\r\n      handleSubmit,\r\n      enabledSubmit,\r\n      submitRegister,\r\n      to\r\n    }) => {\r\n      const fields = [\r\n        <Field\r\n          name=\"email\"\r\n          key=\"email\"\r\n          component={TextField}\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          validate={[required, email]}\r\n        />,\r\n        <Field\r\n          name=\"username\"\r\n          key=\"username\"\r\n          component={TextField}\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          validate={[required, minLenght4]}\r\n        />,\r\n        <Field\r\n          name=\"password\"\r\n          key=\"password\"\r\n          component={TextField}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          validate={[required, minLength6, lengthLessThan40]}\r\n        />\r\n      ]\r\n      return (\r\n        <AuthForm\r\n          fields={fields}\r\n          handleSubmit={handleSubmit}\r\n          enabledSubmit={enabledSubmit}\r\n          onSubmit={submitRegister}\r\n          submitText='Register'\r\n          onBottomTextClick={() => to('login')}\r\n          bottomText=\"Already have an account? Login\"\r\n        />\r\n      )\r\n    }\r\n  )\r\n)"]},"metadata":{},"sourceType":"module"}